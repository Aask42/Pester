trigger:
  - v5.0
pr:
  - v5.0

resources:
  - repo: self
    clean: true
    fetchDepth: 1

variables:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1

stages:
  - stage: Build
    jobs:
      - job: build
        pool:
          name: Default
          demands:
            - net452
            - netcoreapp3.1
        timeoutInMinutes: 3
        steps:
          - powershell: ./build.ps1
          - publish: $(Build.SourcesDirectory)
            artifact: all

  - stage: Test
    jobs:
      - job:
        strategy:
          matrix:
            Ubuntu_16_04:
              vmImage: ubuntu-16.04
              pwsh: true
            Ubuntu_18_04:
              vmImage: ubuntu-18.04
              pwsh: true
            macOS_10_14_Mojave:
              vmImage: macOS-10.14
              pwsh: true
            macOS_10_15_Catalina:
              vmImage: macOS-10.15
              pwsh: true
            Windows_Server2016_PowerShell_Core:
              vmImage: vs2017-win2016
              pwsh: true
            Windows_Server2019_PowerShell_Core:
              vmImage: windows-2019
              pwsh: true
            Windows_Server2016_PowerShell_5_1:
              vmImage: vs2017-win2016
              pwsh: false
            Windows_Server2019_PowerShell_5_1:
              vmImage: windows-2019
              pwsh: false
        pool:
          vmImage: $[ variables['vmImage'] ]
        steps:
          - checkout: none
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              artifactName: 'all'
              targetPath: '$(Build.SourcesDirectory)'
          - task: PowerShell@2
            displayName: 'Test Pester'
            inputs:
              targetType: inline
              pwsh: $(pwsh)
              script: |
                & ./test.ps1 -CI -PassThru -NoBuild
              workingDirectory: '$(Build.SourcesDirectory)'
      - job:
        strategy:
          matrix:
            PowerShell_3:
              powershell: '3'
            PowerShell_4:
              powershell: '4'
        pool:
          name: Default
          demands:
            - powershell -equals $(powershell)
        steps:
          - checkout: none
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              artifactName: 'all'
              targetPath: '$(Build.SourcesDirectory)'
          - task: PowerShell@2
            displayName: 'Test Pester'
            inputs:
              targetType: 'inline'
              script: |
                & ./test.ps1 -CI -PassThru -NoBuild
              workingDirectory: '$(Build.SourcesDirectory)'
